// Blog Management System - Professional CMS
class BlogManager {
    constructor() {
        this.posts = JSON.parse(localStorage.getItem('blogPosts')) || [];
        this.init();
    }

    init() {
        this.loadPosts();
        this.updateStatistics();
        this.setupEventListeners();
        this.loadSampleData();
    }

    setupEventListeners() {
        const form = document.getElementById('postForm');
        if (form) {
            form.addEventListener('submit', (e) => {
                e.preventDefault();
                this.savePost();
            });
        }
    }

    loadSampleData() {
        if (this.posts.length === 0) {
            const samplePosts = [
                {
                    id: Date.now() + 1,
                    title: "Kh·ªüi ƒë·∫ßu h√†nh tr√¨nh AI v√† Machine Learning",
                    category: "ü§ñ AI & Machine Learning",
                    excerpt: "T√¨m hi·ªÉu nh·ªØng ki·∫øn th·ª©c c∆° b·∫£n v·ªÅ AI v√† ML, t·ª´ l√Ω thuy·∫øt ƒë·∫øn th·ª±c h√†nh v·ªõi Python v√† TensorFlow.",
                    content: `
                        <h2>üöÄ Gi·ªõi thi·ªáu v·ªÅ AI v√† Machine Learning</h2>
                        <p>Tr√≠ tu·ªá nh√¢n t·∫°o (AI) v√† H·ªçc m√°y (Machine Learning) ƒëang thay ƒë·ªïi th·∫ø gi·ªõi m·ªôt c√°ch m·∫°nh m·∫Ω. Trong b√†i vi·∫øt n√†y, ch√∫ng ta s·∫Ω c√πng kh√°m ph√° nh·ªØng kh√°i ni·ªám c∆° b·∫£n v√† c√°ch b·∫Øt ƒë·∫ßu h·ªçc t·∫≠p hi·ªáu qu·∫£.</p>
                        
                        <h3>üìö C√°c kh√°i ni·ªám c∆° b·∫£n</h3>
                        <ul>
                            <li><strong>Artificial Intelligence (AI):</strong> Kh·∫£ nƒÉng m√°y t√≠nh m√¥ ph·ªèng tr√≠ th√¥ng minh con ng∆∞·ªùi</li>
                            <li><strong>Machine Learning (ML):</strong> Ph∆∞∆°ng ph√°p d·∫°y m√°y t√≠nh h·ªçc t·ª´ d·ªØ li·ªáu</li>
                            <li><strong>Deep Learning:</strong> M·∫°ng neural s√¢u m√¥ ph·ªèng n√£o b·ªô con ng∆∞·ªùi</li>
                        </ul>
                        
                        <h3>üõ†Ô∏è C√¥ng c·ª• v√† ng√¥n ng·ªØ</h3>
                        <p>ƒê·ªÉ b·∫Øt ƒë·∫ßu v·ªõi AI/ML, b·∫°n c·∫ßn h·ªçc:</p>
                        <ul>
                            <li><strong>Python:</strong> Ng√¥n ng·ªØ ph·ªï bi·∫øn nh·∫•t cho AI/ML</li>
                            <li><strong>TensorFlow/PyTorch:</strong> Framework cho Deep Learning</li>
                            <li><strong>Scikit-learn:</strong> Th∆∞ vi·ªán ML c∆° b·∫£n</li>
                            <li><strong>Jupyter Notebook:</strong> M√¥i tr∆∞·ªùng ph√°t tri·ªÉn t∆∞∆°ng t√°c</li>
                        </ul>
                        
                        <h3>üéØ L·ªô tr√¨nh h·ªçc t·∫≠p</h3>
                        <ol>
                            <li>N·∫Øm v·ªØng Python c∆° b·∫£n</li>
                            <li>H·ªçc to√°n: Linear Algebra, Statistics, Calculus</li>
                            <li>Th·ª±c h√†nh v·ªõi dataset ƒë∆°n gi·∫£n</li>
                            <li>X√¢y d·ª±ng project th·ª±c t·∫ø</li>
                        </ol>
                        
                        <p><em>H√†nh tr√¨nh h·ªçc AI/ML c·∫ßn ki√™n tr√¨ v√† th·ª±c h√†nh li√™n t·ª•c. H√£y b·∫Øt ƒë·∫ßu ngay h√¥m nay!</em></p>
                    `,
                    image: "https://images.unsplash.com/photo-1555949963-aa79dcee981c?w=800&h=400&fit=crop",
                    date: new Date().toLocaleDateString('vi-VN'),
                    createdAt: Date.now()
                },
                {
                    id: Date.now() + 2,
                    title: "Modern Web Development v·ªõi React v√† Next.js",
                    category: "üíª Web Development", 
                    excerpt: "Kh√°m ph√° c√°c c√¥ng ngh·ªá web hi·ªán ƒë·∫°i v·ªõi React, Next.js v√† TypeScript ƒë·ªÉ x√¢y d·ª±ng ·ª©ng d·ª•ng web m·∫°nh m·∫Ω.",
                    content: `
                        <h2>‚ö° Web Development hi·ªán ƒë·∫°i</h2>
                        <p>C√¥ng ngh·ªá web ph√°t tri·ªÉn kh√¥ng ng·ª´ng. H√¥m nay ch√∫ng ta s·∫Ω t√¨m hi·ªÉu v·ªÅ React v√† Next.js - nh·ªØng c√¥ng c·ª• m·∫°nh m·∫Ω nh·∫•t cho frontend development.</p>
                        
                        <h3>üî• T·∫°i sao ch·ªçn React?</h3>
                        <ul>
                            <li><strong>Component-based:</strong> T√°i s·ª≠ d·ª•ng code hi·ªáu qu·∫£</li>
                            <li><strong>Virtual DOM:</strong> Performance t·ªëi ∆∞u</li>
                            <li><strong>Ecosystem m·∫°nh:</strong> R·∫•t nhi·ªÅu th∆∞ vi·ªán h·ªó tr·ª£</li>
                            <li><strong>Community l·ªõn:</strong> H·ªó tr·ª£ v√† t√†i li·ªáu phong ph√∫</li>
                        </ul>
                        
                        <h3>üöÄ Next.js - Framework tuy·ªát v·ªùi</h3>
                        <p>Next.js mang ƒë·∫øn nh·ªØng t√≠nh nƒÉng cao c·∫•p:</p>
                        <ul>
                            <li><strong>Server-Side Rendering (SSR)</strong></li>
                            <li><strong>Static Site Generation (SSG)</strong></li>
                            <li><strong>API Routes t√≠ch h·ª£p</strong></li>
                            <li><strong>Automatic code splitting</strong></li>
                            <li><strong>Built-in CSS support</strong></li>
                        </ul>
                        
                        <h3>üí° Best Practices</h3>
                        <pre><code>// Component t√°i s·ª≠ d·ª•ng
const Button = ({ children, onClick, variant = 'primary' }) => {
  return (
    &lt;button 
      className={\`btn btn-\${variant}\`}
      onClick={onClick}
    &gt;
      {children}
    &lt;/button&gt;
  );
};</code></pre>
                        
                        <p>K·∫øt h·ª£p React + Next.js + TypeScript s·∫Ω cho b·∫°n m·ªôt stack development c·ª±c k·ª≥ m·∫°nh m·∫Ω!</p>
                    `,
                    image: "https://images.unsplash.com/photo-1633356122544-f134324a6cee?w=800&h=400&fit=crop",
                    date: new Date().toLocaleDateString('vi-VN'),
                    createdAt: Date.now() + 1000
                }
            ];

            this.posts = samplePosts;
            this.savePosts();
        }
    }

    savePost() {
        const title = document.getElementById('postTitle').value.trim();
        const category = document.getElementById('postCategory').value;
        const excerpt = document.getElementById('postExcerpt').value.trim();
        const image = document.getElementById('postImage').value.trim();
        
        // Get content from Quill editor if available, otherwise from textarea
        let content = '';
        if (window.quill) {
            content = window.quill.root.innerHTML;
            // Update hidden textarea
            document.getElementById('postContent').value = content;
        } else {
            content = document.getElementById('postContent').value.trim();
        }

        if (!title || !category || !excerpt || !content || content === '<p><br></p>') {
            this.showToast('‚ùå Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!', 'error');
            return;
        }

        const post = {
            id: Date.now(),
            title,
            category,
            excerpt,
            content,
            image: image || 'https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?w=800&h=400&fit=crop',
            date: new Date().toLocaleDateString('vi-VN'),
            createdAt: Date.now()
        };

        this.posts.unshift(post);
        this.savePosts();
        this.loadPosts();
        this.updateStatistics();
        this.clearForm();
        this.showToast('‚úÖ B√†i vi·∫øt ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!');
        
        // Clear draft after successful save
        localStorage.removeItem('blogDraft');
    }

    editPost(id) {
        const post = this.posts.find(p => p.id === id);
        if (!post) return;

        document.getElementById('postTitle').value = post.title;
        document.getElementById('postCategory').value = post.category;
        document.getElementById('postExcerpt').value = post.excerpt;
        document.getElementById('postImage').value = post.image;
        
        // Load content into Quill editor if available
        if (window.quill) {
            window.quill.root.innerHTML = post.content;
            document.getElementById('postContent').value = post.content;
        } else {
            document.getElementById('postContent').value = post.content;
        }

        // Remove old post and scroll to editor
        this.deletePost(id);
        window.scrollTo({ top: 0, behavior: 'smooth' });
        this.showToast('üìù B√†i vi·∫øt ƒë√£ ƒë∆∞·ª£c t·∫£i ƒë·ªÉ ch·ªânh s·ª≠a');
    }

    deletePost(id) {
        if (confirm('üóëÔ∏è B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a b√†i vi·∫øt n√†y?')) {
            this.posts = this.posts.filter(post => post.id !== id);
            this.savePosts();
            this.loadPosts();
            this.updateStatistics();
            this.showToast('üóëÔ∏è ƒê√£ x√≥a b√†i vi·∫øt th√†nh c√¥ng');
        }
    }

    clearAllPosts() {
        if (confirm('‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a T·∫§T C·∫¢ b√†i vi·∫øt? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!')) {
            this.posts = [];
            this.savePosts();
            this.loadPosts();
            this.updateStatistics();
            this.showToast('üóëÔ∏è ƒê√£ x√≥a t·∫•t c·∫£ b√†i vi·∫øt');
        }
    }

    loadPosts() {
        const container = document.getElementById('postsList');
        if (!container) return;

        if (this.posts.length === 0) {
            container.innerHTML = `
                <div style="text-align: center; padding: 2rem; color: var(--text-secondary);">
                    <i class="fas fa-folder-open" style="font-size: 3rem; margin-bottom: 1rem; opacity: 0.5;"></i>
                    <p>Ch∆∞a c√≥ b√†i vi·∫øt n√†o. H√£y t·∫°o b√†i vi·∫øt ƒë·∫ßu ti√™n!</p>
                </div>
            `;
            return;
        }

        const postsHTML = this.posts.map(post => `
            <div class="post-item" data-id="${post.id}">
                <div class="post-info">
                    <h4>${this.escapeHtml(post.title)}</h4>
                    <p>
                        <span style="background: rgba(102, 126, 234, 0.1); color: var(--primary-color); padding: 0.2rem 0.6rem; border-radius: 15px; font-size: 0.8rem; font-weight: 500;">
                            ${post.category}
                        </span>
                        ¬∑ ${post.date}
                    </p>
                </div>
                <div class="post-actions">
                    <button onclick="blogManager.editPost(${post.id})" class="btn btn-secondary btn-small">
                        <i class="fas fa-edit"></i>
                        S·ª≠a
                    </button>
                    <button onclick="blogManager.deletePost(${post.id})" class="btn btn-secondary btn-small" style="color: #dc3545;">
                        <i class="fas fa-trash"></i>
                        X√≥a
                    </button>
                </div>
            </div>
        `).join('');

        container.innerHTML = postsHTML;
    }

    updateStatistics() {
        const totalPosts = this.posts.length;
        const categories = [...new Set(this.posts.map(post => post.category))].length;
        const lastUpdate = this.posts.length > 0 ? 
            new Date(Math.max(...this.posts.map(p => p.createdAt))).toLocaleDateString('vi-VN') : 
            '-';

        document.getElementById('totalPosts').textContent = totalPosts;
        document.getElementById('totalCategories').textContent = categories;
        document.getElementById('lastUpdate').textContent = lastUpdate;
        document.getElementById('postCount').textContent = `${totalPosts} b√†i vi·∫øt`;
    }

    previewPost() {
        const title = document.getElementById('postTitle').value.trim();
        const category = document.getElementById('postCategory').value;
        const image = document.getElementById('postImage').value.trim();
        
        // Get content from Quill editor if available, otherwise from textarea
        let content = '';
        if (window.quill) {
            content = window.quill.root.innerHTML;
        } else {
            content = document.getElementById('postContent').value.trim();
        }

        if (!title || !content || content === '<p><br></p>') {
            this.showToast('‚ùå C·∫ßn c√≥ ti√™u ƒë·ªÅ v√† n·ªôi dung ƒë·ªÉ xem tr∆∞·ªõc', 'error');
            return;
        }

        const previewHTML = `
            <div class="post-preview">
                ${image ? `<img src="${image}" alt="${this.escapeHtml(title)}" style="width: 100%; height: 150px; object-fit: cover; border-radius: 10px; margin-bottom: 1rem;">` : ''}
                <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 1rem;">
                    ${category ? `<span style="background: rgba(102, 126, 234, 0.1); color: var(--primary-color); padding: 0.3rem 0.8rem; border-radius: 15px; font-size: 0.8rem; font-weight: 600;">${category}</span>` : ''}
                    <span style="color: var(--text-secondary); font-size: 0.9rem;">${new Date().toLocaleDateString('vi-VN')}</span>
                </div>
                <h1 style="margin: 0 0 1rem 0; color: var(--text-primary); font-size: 1.5rem; line-height: 1.3;">${this.escapeHtml(title)}</h1>
                <div class="content-preview" style="color: var(--text-primary); line-height: 1.6;">
                    ${content}
                </div>
            </div>
        `;

        document.getElementById('previewArea').innerHTML = previewHTML;
        this.showToast('üëÅÔ∏è Preview ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t');
    }

    clearForm() {
        document.getElementById('postForm').reset();
        
        // Clear Quill editor if available
        if (window.quill) {
            window.quill.setContents([]);
            document.getElementById('postContent').value = '';
        }
        
        // Reset template buttons
        document.querySelectorAll('.template-btn').forEach(btn => {
            btn.classList.remove('active');
        });
        
        document.getElementById('previewArea').innerHTML = `
            <p style="text-align: center; color: var(--text-secondary); font-style: italic;">
                Nh·∫•n "Xem tr∆∞·ªõc" ƒë·ªÉ preview b√†i vi·∫øt c·ªßa b·∫°n
            </p>
        `;
        
        // Clear draft
        localStorage.removeItem('blogDraft');
    }

    exportBlog() {
        const blogData = {
            posts: this.posts,
            exported: new Date().toISOString(),
            version: '1.0.0'
        };

        const dataStr = JSON.stringify(blogData, null, 2);
        const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);
        
        const exportFileDefaultName = `blog-backup-${new Date().toISOString().split('T')[0]}.json`;
        
        const linkElement = document.createElement('a');
        linkElement.setAttribute('href', dataUri);
        linkElement.setAttribute('download', exportFileDefaultName);
        linkElement.click();
        
        this.showToast('üì¶ Blog ƒë√£ ƒë∆∞·ª£c export th√†nh c√¥ng!');
    }

    savePosts() {
        localStorage.setItem('blogPosts', JSON.stringify(this.posts));
    }

    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    showToast(message, type = 'success') {
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toastMessage');
        
        toastMessage.textContent = message;
        
        if (type === 'error') {
            toast.style.background = 'linear-gradient(135deg, #ff6b6b, #ff5252)';
        } else {
            toast.style.background = 'var(--primary-gradient)';
        }
        
        // Show toast
        toast.style.transform = 'translateX(0)';
        
        // Hide after 3 seconds
        setTimeout(() => {
            toast.style.transform = 'translateX(400px)';
        }, 3000);
    }
}

// Global functions for inline event handlers
window.previewPost = function() {
    blogManager.previewPost();
};

window.clearAllPosts = function() {
    blogManager.clearAllPosts();
};

window.exportBlog = function() {
    blogManager.exportBlog();
};

// Initialize blog manager when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    window.blogManager = new BlogManager();
});

// Auto-save draft every 30 seconds
setInterval(() => {
    const title = document.getElementById('postTitle')?.value;
    let content = '';
    
    // Get content from Quill editor if available
    if (window.quill) {
        content = window.quill.root.innerHTML;
    } else {
        content = document.getElementById('postContent')?.value;
    }
    
    if (title || (content && content !== '<p><br></p>')) {
        const draft = {
            title: title || '',
            category: document.getElementById('postCategory')?.value || '',
            excerpt: document.getElementById('postExcerpt')?.value || '',
            content: content || '',
            image: document.getElementById('postImage')?.value || '',
            lastSaved: Date.now()
        };
        
        localStorage.setItem('blogDraft', JSON.stringify(draft));
    }
}, 30000);

// Load draft on page load
window.addEventListener('load', () => {
    const draft = localStorage.getItem('blogDraft');
    if (draft) {
        const draftData = JSON.parse(draft);
        const lastSaved = new Date(draftData.lastSaved);
        const now = new Date();
        
        // Load draft if it's less than 24 hours old
        if (now - lastSaved < 24 * 60 * 60 * 1000) {
            if (confirm('üìù C√≥ b·∫£n nh√°p ch∆∞a ho√†n th√†nh. B·∫°n mu·ªën ti·∫øp t·ª•c vi·∫øt?')) {
                document.getElementById('postTitle').value = draftData.title;
                document.getElementById('postCategory').value = draftData.category;
                document.getElementById('postExcerpt').value = draftData.excerpt;
                document.getElementById('postContent').value = draftData.content;
                document.getElementById('postImage').value = draftData.image;
            }
        }
    }
});
